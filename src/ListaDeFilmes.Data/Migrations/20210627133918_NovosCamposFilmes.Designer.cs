// <auto-generated />
using System;
using ListaDeFilmes.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ListaDeFilmes.Data.Migrations
{
    [DbContext(typeof(ListaDeFilmesContext))]
    [Migration("20210627133918_NovosCamposFilmes")]
    partial class NovosCamposFilmes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ListaDeFilmes.Business.Models.Ator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Ator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome_Ator")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tb_Atores");
                });

            modelBuilder.Entity("ListaDeFilmes.Business.Models.Diretor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Diretor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome_Diretor")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tb_Diretores");
                });

            modelBuilder.Entity("ListaDeFilmes.Business.Models.Filme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Filme")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Ano")
                        .HasColumnName("Ano_Filme")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Classificacao")
                        .IsRequired()
                        .HasColumnName("Classificacao_Filme")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Comentarios")
                        .HasColumnName("Comentarios_Filme")
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnName("Data_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DiretorId")
                        .HasColumnName("Id_Diretor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeneroId")
                        .HasColumnName("Id_Genero")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome_Filmes")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("ProdutoraId")
                        .HasColumnName("Id_Produtora")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DiretorId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("ProdutoraId");

                    b.ToTable("Tb_Filmes");
                });

            modelBuilder.Entity("ListaDeFilmes.Business.Models.FilmeAtor", b =>
                {
                    b.Property<Guid>("FilmeId")
                        .HasColumnName("Id_Filme")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AtorId")
                        .HasColumnName("Id_Ator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FilmeId", "AtorId");

                    b.HasIndex("AtorId");

                    b.ToTable("Tb_FilmesAtores");
                });

            modelBuilder.Entity("ListaDeFilmes.Business.Models.Genero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Genero")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome_Genero")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tb_Generos");
                });

            modelBuilder.Entity("ListaDeFilmes.Business.Models.Produtora", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Produtora")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome_Produtora")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tb_Produtoras");
                });

            modelBuilder.Entity("ListaDeFilmes.Business.Models.Filme", b =>
                {
                    b.HasOne("ListaDeFilmes.Business.Models.Diretor", "Diretor")
                        .WithMany("Filmes")
                        .HasForeignKey("DiretorId");

                    b.HasOne("ListaDeFilmes.Business.Models.Genero", "Genero")
                        .WithMany("Filmes")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ListaDeFilmes.Business.Models.Produtora", "Produtora")
                        .WithMany("Filmes")
                        .HasForeignKey("ProdutoraId");
                });

            modelBuilder.Entity("ListaDeFilmes.Business.Models.FilmeAtor", b =>
                {
                    b.HasOne("ListaDeFilmes.Business.Models.Ator", "Ator")
                        .WithMany("FilmesAtores")
                        .HasForeignKey("AtorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ListaDeFilmes.Business.Models.Filme", "Filme")
                        .WithMany("FilmesAtores")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
